/* peripherals.h
 * Unified peripheral interface for PS GPIO, SPI, and UART
 * Generated by combining bgpiops.h, bspips.h, and buartps.h.
 * Logic and variable names remain unchanged.
 */

#ifndef PERIPHERALS_H
#define PERIPHERALS_H

#include "xgpiops.h"
#include "xspips.h"
#include "xuartps.h"
#include "xil_printf.h"

/* ============================ GPIO ============================ */
#define GPIO_IN         0
#define GPIO_OUT        1

#define GPIO_DEVICE_ID  0
#define GPIO_SW19_PIN   22
#define GPIO_DS50_PIN   23
#define GPIO_PWDN_PIN   78
#define GPIO_FDA_PIN    79
#define GPIO_FDB_PIN    80

/* ============================= SPI ============================ */
#define SPI_DEVICE_ID   0

/* ============================ UART ============================ */
#define UART0_DEVICE_ID      0
#define MAX_UART_LINE_LENGTH 128

/* =================== Function Prototypes ===================== */
/* ---- GPIO ---- */
XGpioPs_Config* gpio_init(XGpioPs* InstancePtr);

/* ---- SPI  ---- */
void ad9695_read_register(XSpiPs *Spi, u16 reg_addr, u8 *data);
void ad9695_write_register(XSpiPs *Spi, u16 reg_addr, u8 value);
u8   ad9695_read_bit   (XSpiPs *Spi, u16 reg_addr, u8 bit_pos);
XSpiPs_Config* spi_init(XSpiPs* InstancePtr);

/* ---- UART ---- */
XUartPs_Config* uart_init   (XUartPs* uart);
void            uart_get_line(char* buffer);

#endif /* PERIPHERALS_H */
